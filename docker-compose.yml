version: '3.8'

services:
  # MongoDB Database
  mongo:
    image: mongo:6.0
    container_name: agriquest-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: agriquest123
      MONGO_INITDB_DATABASE: agriquest
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d:ro
    networks:
      - agriquest-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/agriquest --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  # AgriQuest API Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: agriquest-server
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGO_URI: mongodb://admin:agriquest123@mongo:27017/agriquest?authSource=admin
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      MAX_FILE_SIZE: 5242880
      UPLOAD_PATH: ./uploads
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
    ports:
      - "3000:3000"
    volumes:
      - server_uploads:/app/uploads
      - server_logs:/app/logs
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - agriquest-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/ping', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB Admin Interface (optional)
  mongo-express:
    image: mongo-express:1.0.0-alpha
    container_name: agriquest-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: agriquest123
      ME_CONFIG_MONGODB_URL: mongodb://admin:agriquest123@mongo:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - agriquest-network
    profiles:
      - admin

volumes:
  mongo_data:
    driver: local
  server_uploads:
    driver: local
  server_logs:
    driver: local

networks:
  agriquest-network:
    driver: bridge
